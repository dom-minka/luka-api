FORMAT: 1A
HOST: http://lukaapi.apiblueprint.org/

# Luka API

Luka documentation.

NOTE: This document is **work in Progress**.
TODOs: add error status reply

## Introduction

basic description. Link to readme file.

## Testing

Testing guidelines.

# Group Person

A Person that makes payments to billers.

## Person Collection [/person]

A Person.

+ Attributes  (Person)

### Create a Person [POST /biller]

Create a Person.

+ Request
  + Attributes  (Person)

+ Response 201 (application/json)
  + Attributes  (Person)

### Get a Person [GET /person/{handle}]

Get a specific Person based on his handle (phone number).

+ Parameter
  + handle: 213438985485299 - Person handle (Facebook id).

+ Response 200 (application/json)
  + Attributes  (Person)
  
### Update a Person [PUT /person/{handle}]

Get a specific Person based on his handle (phone number).

+ Parameter
  + handle: 213438985485299 - Person handle (Facebook id).
  
+ Request
  + Attributes (Person)

+ Response 200 (application/json)
  + Attributes  (Person)

### Get all People [GET /person?countryCode={countryCode}]

Get all people in the system.

+   Parameter
    + countryCode:  HR (optional, string)
      + default:  BO

+   Response 200  (application/json)
    + Attributes  (array[Person])




#Group Company

A contract provider that delivers products payed by the person.

## Company Collection  [/company]

Company.

+ Attributes  (Company)

### Create a Biller [POST /Company]

Create a Biller.

+ Request
  + Attributes  (Company)

+ Response 201 (application/json)
  + Attributes  (Company)
  
### Get a Company  [GET /company/{handle}]

Get a Company based on his handle.

+ Parameter
  + handle: companyName - company handle (Facebook id).

+ Response 200 (application/json)
  + Attributes  (Company)

### Get all Companies [GET /company?countryCode={countryCode}]

Get all Companies.

+   Parameter
    + countryCode:  HR (optional, string)
      + default:  BO

+   Response 200  (application/json)
    + Attributes  (array[Company])

### Get Company Products  [GET /biller/{handle}/product]

A Contract is an agreement between People and Billers.
Get Contracts that are related to a Biller.

+ Parameter
  + handle: yambal-bo - Biller handle.

+ Response 200 (application/json)
  + Attributes  (array[Product])
  
## Product Collection [/product]

A Product provided by the Biller. 

+ Attributes  (Product)

### Create a Product [POST /product]

Creates a Product.

+ Request
  + Attributes  (Product)

+ Response 201 (application/json)
  + Attributes  (Product)
  
### Get a Product [GET /product/{handle}]

Gets a Prodcut.

+ Parameter
  + handle: 213438985485299 - Contract handle.

+ Response 200 (application/json)
  + Attributes  (Product)
  
### Get all Products [GET /product?countryCode={countryCode}]

Gets Products for a specific country.

+ Parameter
   + countryCode:  HR (optional, string)
      + default:  BO

+ Response 200 (application/json)
  + Attributes  (Product)
  
# Group Payment

## Payment Collection [/payment]

A payment refers to a one-off payment to another person or company. 
A payment si usually asyncrohnus and requires various steps if third parties are involved. 

+ Attributes  (Payment)

### Create a Payment  [POST /payment]

Initiate a Payment between Biller and Person.

+ Request
  + Attributes  (Payment)

+ Response 201 (application/json)
  + Attributes  (Payment)

### Get a Payment [GET /payment/{handle}]

Get a Payment status.

+ Parameter
  + handle: 38553745530 - Payment id.

+ Response 200 (application/json)
  + Attributes  (Payment)
  
### Update a Payment [PUT /payment/{handle}]

Get a Payment status.

+ Parameter
  + handle: 38553745530 - Payment id.

+ Request
    + Attributes (Payment)

+ Response 200 (application/json)
  + Attributes  (Payment)
  
## Contract Collection  [/contract]

A Contract between a Person and a Biller.

+ Attributes  (Contract)

### Create a contract [POST /contract]

Creates a Contract.

+ Request
  + Attributes  (Contract)

+ Response 201 (application/json)
  + Attributes  (Contract)

### Get a contract [GET /contract/{handle}]

Gets a Contract.

+ Parameter
  + handle: 213438985485299 - Contract handle.

+ Response 200 (application/json)
  + Attributes  (Contract)
  
## Transfer Collection [/transfer]

A transfer is a one-off transaction where you move money between two Minka accounts.

### Create a Payment  [POST /payment]

Initiate a Transfer between two wallets.

+ Request
  + Attributes  (Payment)

+ Response 201 (application/json)
  + Attributes  (Payment)

# Data Structures

##  Locale  (object)
- street: nikola tesla house (string) - Street
- city: Smiljan (string) - City
- zip: 53211 (string) - Zip code
- country: Croatia (string) - Country
- countryCode: HRV (string) - Country code ISO


##  Labels (object)
- 1sLabel: firstText (string) - First label
- snLabel: secondTest (string) - Second label

##  Person  (object)
- handle: 213438985485299 (string, required) - User handle (facebookId)
- fiName: Nikola (string, required) - First name
- laName: Tesla (string, required) - Last name
- phone1: 38553745530 (string, optional) - Phone number
- email1: nikola@tesla.com (string, optional) - Email address
- faceid: https://www.facebook.com/213438985485299 (string) - Facebook url
- create: dateCreated (string, required) - Date created
- locale  (Locale)
- labels (Labels) - Additional info about Peron


##  Company  (object)
- handle: yambal_bo (string, required) - Handle
- number: 12345 (string, optional) - Tax Id number
- detail: Yambal Bolivias (string) - Legal name
- facebo: https://www.facebook.com/314324123 (string) - website
- create: dateCreated (string, required) - Date created
- locale (Locale)
- labels (Labels) - Additional info about Biller

##  Bridge  (object)
- handle: yambal_bo (string, required) - Handle
- detail: Sintesis Bolivia (string) - Legal name
- verify: urlurl (string) - affirm url
- action: urlurl (string) - action payment url
- create: dateCreated (string, required) - Date created
- labels (Labels) - Additional info about Biller
- locale (Locale)


##  Product  (object)
- handle: yambal_bo_postpago (string) - Handle
- source: yambal_bo (string, required)  - Company handle
- detail: Yambal Bolivia Postpago (string, required) - Description
- created: dateCreated (string, required) - Date created
- locale (Locale)
- labels (Labels) - Additional info about Product
- bridge (Bridge) - Bridge information

## Contract (object)
- handle: generatedid (string) - Autogenerated Id
- detail: descriptionContract (string) - Description of the contract
- source: person-handle (string, required) - Person handle
- target: product-handle (string, required) - Product handle
- amount: 1000 (string, optional)- Default amount of the Contract
- symbol: BOB (string, optional) - Default currency
- nature: monthly (string) - Nature of the contract 
- labels (Labels) - Additional info about Contract

## Payment (object)
- handle: d1efdsafds (string) - Payment Id
- source: handle (string, required) - Wallet Id
- target: handle (string, required) - Wallet Id
- amount: 1000 (number, required) - Amount of payment
- symbol: BOB (string, required)  - Currency symbol
- detail: descriptionDetail (string) - description
- expiry: datum (string) - Date due (for requests)
- status: INITIATED (string) - Payment status (TBD)
- created: dateCreated (string, required) - Date created
- labels (Labels) - Additional info about Payment

## Wallet (object)
- handle: d1efdsafds (string) - Wallet Id
- source: person-id (string) - Person Id
- create: dateCreated (string, required) - Date created
- labels (Labels) - Additional info about Wallet