FORMAT: 1A
HOST: http://lukaapi.apiblueprint.org/

# Luka API

Luka documentation.

NOTE: This document is **work in Progress**.
TODOs: add error status reply

## Introduction

basic description. Link to readme file.

## Testing

Testing guidelines.

# Group Person

A Person that makes payments to billers.

## Person Collection [/person]

A Person.

+ Attributes  (Person)

### Create a Person [POST /biller]

Create a Person.

+ Request
  + Attributes  (Person)

+ Response 201 (application/json)
  + Attributes  (Person)

### Get a Person [GET /person/{handle}]

Get a specific Person based on his handle (phone number).

+ Parameter
  + handle: 213438985485299 - Person handle (Facebook id).

+ Response 200 (application/json)
  + Attributes  (Person)
  
### Update a Person [PUT /person/{handle}]

Get a specific Person based on his handle (phone number).

+ Parameter
  + handle: 213438985485299 - Person handle (Facebook id).

+ Response 200 (application/json)
  + Attributes  (Person)

### Get all People [GET /person?countryCode={countryCode}]

Get all people in the system.

+   Parameter
    + countryCode:  HR (optional, string)
      + default:  BO

+   Response 200  (application/json)
    + Attributes  (array[Person])

## Payment Collection [/payment]

A Payment for a product provided by the Biller.

+ Attributes  (Payment)

### Create a Payment  [POST /payment]

Initiate a Payment between Biller and Person.

+ Request
  + Attributes  (Payment)

+ Response 201 (application/json)
  + Attributes  (Payment)

### Get a Payment [GET /payment/{handle}]

Get a Payment status.

+ Parameter
  + handle: 38553745530 - Payment id.

+ Response 200 (application/json)
  + Attributes  (Payment)

#Group Biller

A contract provider that delivers products payed by the person.

## Biller Collection  [/biller]

Biller.

+ Attributes  (Biller)

### Create a Biller [POST /biller]

Create a Biller.

+ Request
  + Attributes  (Biller)

+ Response 201 (application/json)
  + Attributes  (Biller)

### Get all Billers [GET /biller?countryCode={countryCode}]

Get all Billers.

+   Parameter
    + countryCode:  HR (optional, string)
      + default:  BO

+   Response 200  (application/json)
    + Attributes  (array[Biller])

### Get a Biller  [GET /biller/{handle}]

Get a Biller based on his handle.

+ Parameter
  + handle: 213438985485299 - Biller handle (Facebook id).

+ Response 200 (application/json)
  + Attributes  (Biller)

### Get Biller Products  [GET /biller/{handle}/product]

A Contract is an agreement between People and Billers.
Get Contracts that are related to a Biller.

+ Parameter
  + handle: yambal-bo - Biller handle.

+ Response 200 (application/json)
  + Attributes  (array[Product])
  
## Product Collection [/product]

A Product provided by the Biller. 

### Create a Product [POST /product]

Creates a Product.

+ Request
  + Attributes  (Product)

+ Response 201 (application/json)
  + Attributes  (Product)
  
### Get a Product [GET /product/{handle}]

Gets a Prodcut.

+ Parameter
  + handle: 213438985485299 - Contract handle.

+ Response 200 (application/json)
  + Attributes  (Product)
  
### Get all Products [GET /product?countryCode={countryCode}]

Gets Products for a specific country.

+ Parameter
   + countryCode:  HR (optional, string)
      + default:  BO

+ Response 200 (application/json)
  + Attributes  (Product)


## Contract Collection  [/contract]

A Contract between a Person and a Biller.

+ Attributes  (Contract)

### Create a contract [POST /contract]

Creates a Contract.

+ Request
  + Attributes  (Contract)

+ Response 201 (application/json)
  + Attributes  (Contract)

### Get a contract [GET /contract/{handle}]

Gets a Contract.

+ Parameter
  + handle: 213438985485299 - Contract handle.

+ Response 200 (application/json)
  + Attributes  (Contract)

# Data Structures

##  Location  (object)
- street: nikola tesla house (string) - Street
- city: Smiljan (string) - City
- zip: 53211 (string) - Zip code
- country: Croatia (string) - Country
- countryCode: HRV (string) - Country code ISO

##  Label (object)
- firstLabel: firstText (string) - First label
- secondLabel: secondTest (string) - Second label

##  Person  (object)
- handle: 213438985485299 (string, required) - User handle (facebookId)
- firstName: Nikola (string, required) - First name
- lastName: Tesla (string, required) - Last name
- phone: 38553745530 (string, optional) - Phone number
- email: nikola@tesla.com (string, optional) - Email address
- facebook: https://www.facebook.com/213438985485299 (string) - Facebook url
- created: '2016-08-17T18:58:47.630Z' - Date created
- location  (Location)
- labels (Label) - Additional info about Peron


##  Biller  (object)
- handle: yambal-bo (string, required) - Handle
- detail: Yambal Bolivias (string) - Legal name
- facebook: https://www.facebook.com/314324123 (string) - website
- created: '2016-08-17T18:58:47.630Z' - Date created
- location (Location)
- labels (Label) - Additional info about Biller

##  Product  (object)
- handle: yambal-bo-postpago (string) - Handle
- source: yambal-bo (string, required)  - Biller handle
- detail: Yambal Bolivia Postpago (string, required) - Description
- signer: hash1234234 (string, required)  - Core account
- created: '2016-08-17T18:58:47.630Z' - Date created
- location (Location)
- labels (Label) - Additional info about Product

## Contract (object)
- handle: generatedid (string) - Autogenerated Id
- source: person-handle (string, required) - Person handle
- target: product-handle (string, required) - Product handle
- amount: 1000 (string, optional)- Default amount of the Contract
- symbol: BOB (string, optional) - Default currency
- nature: monthly (string) - Nature of the contract
- labels (Label) - Additional info about Contract

## Payment (object)
- id: d1efdsafds (string) - Payment Id
- source: person-id (string) - Person Id
- target: product-id (string) - Product Id
- amount: 1000 (number) - Amount of payment
- symbol: BOB (string)  - Currency symbol
- status: INITIATED (string) - Payment status
- labels (Label) - Additional info about Payment